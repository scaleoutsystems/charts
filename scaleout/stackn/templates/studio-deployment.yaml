apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    reloader.stakater.com/auto: "true"
  labels:
    io.kompose.service: {{ .Release.Name }}-studio
    name: {{ .Release.Name }}-studio
  name: {{ .Release.Name }}-studio
spec:
  replicas: {{ .Values.studio.replicas }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      name: {{ .Release.Name }}-studio
  template:
    metadata:
      labels:
        io.kompose.service: {{ .Release.Name }}-studio
        name: {{ .Release.Name }}-studio
    spec:
      securityContext:
        fsGroup: 1000
      initContainers:
        - name: volume-permissions
          image: busybox
          command: ['sh', '-c', 'chown -R 1000 /app/media && chgrp -R 1000 /app/media']
          volumeMounts:
          - mountPath: {{ .Values.studio.media.mount_path }}
            name: mediavol
          securityContext:
            runAsUser: 0
            runAsGroup: 0
            runAsNonRoot: false
        - name: wait-for-db
          image: postgres
          command: ['sh', '-c', 'until pg_isready --host={{ .Values.postgresql.fullnameOverride }} --port={{ .Values.postgresql.primary.service.ports.postgresql }}; do echo waiting for database; sleep 2; done;']
          resources:
            limits:
              cpu: "100m"
              memory: "512Mi"
            requests:
              cpu: "100m"
              memory: "512Mi"
      containers:
      - args:
        - sh
        - scripts/run_web.sh
        env:
        - name: DEBUG
        {{ if .Values.studio.debug }}
          value: "true"
        {{ else }}
          value: "false"
        {{ end }}
        - name: INIT
          value: {{ .Values.studio.init | quote }}
        - name: STUDIO_STORAGECLASS
          value: {{ include "stackn.studio.storageclass" . }}
        - name: STUDIO_ACCESSMODE
          value: {{ .Values.accessmode }}
        - name: DJANGO_SUPERUSER
          value: {{ include "stackn.studio.superuser" . }}
        - name: DJANGO_SUPERUSER_EMAIL
          value: {{ include "stackn.studio.superuser.email" . }}
        - name: DJANGO_SUPERUSER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "stackn.secretName" . }}
              key: studio-superuser-password
        - name: GET_HOSTS_FROM
          value: dns
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "stackn.postgres.secretName" . }}
              key: password
        - name: POSTGRES_USER
          value: {{ .Values.postgresql.global.postgresql.auth.user }}
        - name: RABBITMQ_DEFAULT_PASS
          valueFrom:
            secretKeyRef:
              name: {{ include "stackn.secretName" . }}
              key: rabbit-password
        {{- if .Values.chartcontroller.addSecret }}
        - name: KUBECONFIG
          value: {{ .Values.studio.kubeconfig_file | quote }}
        {{- end }}
        image: {{ .Values.studio.image.repository }}
        imagePullPolicy: {{ .Values.studio.image.pullPolicy }}
        name: {{ .Release.Name }}-studio
        volumeMounts:
          {{- if .Values.chartcontroller.addSecret }}
          - name: kubeconfig
            mountPath: {{ .Values.studio.kubeconfig_dir | quote }}
            readOnly: true
          {{- end }}
          - mountPath: /app/studio/settings.py
            subPath: settings.py
            name: {{ .Release.Name}}-settings-configmap
          - name: mediavol
            mountPath: {{ .Values.studio.media.mount_path }}
        resources:
          limits:
            cpu: {{ .Values.studio.resources.limits.cpu }}
            memory: {{ .Values.studio.resources.limits.memory }}
          requests:
            cpu: {{ .Values.studio.resources.requests.cpu }}
            memory: {{ .Values.studio.resources.requests.memory }}

    
      imagePullSecrets:
        - name: ghcrsecret
    
      restartPolicy: Always
      volumes:
      {{- if .Values.chartcontroller.addSecret }}
      - name: kubeconfig
        secret:
          secretName: {{ .Release.Name }}-chart-controller-secret
      {{- end }}
      - name: {{ .Release.Name}}-settings-configmap
        configMap:
          name: {{ .Release.Name}}-settings-configmap
          items:
          - key: settings.py
            path: settings.py
      - name: mediavol
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-studio-media

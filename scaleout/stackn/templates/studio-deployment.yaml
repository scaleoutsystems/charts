apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    reloader.stakater.com/auto: "true"
  labels:
    io.kompose.service: {{ .Release.Name }}-studio
    name: {{ .Release.Name }}-studio
  name: {{ .Release.Name }}-studio
spec:
  replicas: {{ .Values.studio.replicas }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      name: {{ .Release.Name }}-studio
  template:
    metadata:
      labels:
        io.kompose.service: {{ .Release.Name }}-studio
        name: {{ .Release.Name }}-studio
    spec:
      initContainers:
        - name: wait-for-db
          image: postgres
          command: ['sh', '-c', 'until pg_isready --host={{ .Values.postgresql.fullnameOverride }}.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local --port={{ .Values.postgresql.service.port }}; do echo waiting for database; sleep 2; done;']
          resources:
            limits:
              cpu: 100m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 512Mi
      containers:
      - args:
        - sh
        - scripts/run_web.sh
        env:
        {{ if .Values.studio.debug }}
        - name: DEBUG
          value: "true"
        {{ end }}
        - name: GET_HOSTS_FROM
          value: dns
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "stackn.studio.postgresql.secretName" . }}
              key: postgresql-password
        - name: RABBITMQ_DEFAULT_PASS
          valueFrom:
            secretKeyRef:
              name: {{ include "stackn.secretName" . }}
              key: rabbit-password

        image: {{ .Values.studio.image.repository }}
        imagePullPolicy: Always
        name: {{ .Release.Name }}-studio
        volumeMounts:
          - name: config
            mountPath: "/app/chartcontroller/config/"
            readOnly: true
          - mountPath: /app/studio/settings.py
            subPath: settings.py
            name: {{ .Release.Name}}-settings-configmap
          - mountPath: /app/projects/fixtures/fixtures.json
            subPath: fixtures.json
            name: {{ .Release.Name }}-fixtures-configmap
          - name: mediavol
            mountPath: /media
        resources:
          limits:
            cpu: {{ .Values.studio.resources.limits.cpu }}
            memory: {{ .Values.studio.resources.limits.memory }}
          requests:
            cpu: {{ .Values.studio.resources.requests.cpu }}
            memory: {{ .Values.studio.resources.requests.memory }}

    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      restartPolicy: Always
      volumes:
      - name: config
        secret:
          secretName: {{ .Release.Name }}-chart-controller-secret
      - name: {{ .Release.Name}}-settings-configmap
        configMap:
          name: {{ .Release.Name}}-settings-configmap
          items:
          - key: settings.py
            path: settings.py
      - name: {{ .Release.Name }}-fixtures-configmap
        configMap:
          name: {{ .Release.Name }}-fixtures-configmap
          items:
          - key: fixtures.json
            path: fixtures.json
      - name: mediavol
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-studio-media

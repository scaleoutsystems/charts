kind: ConfigMap
apiVersion: v1
metadata:
  name: {{ .Release.Name }}-static-config
  namespace: {{ .Values.namespace }}
data:
  # Configuration values can be set as key-value properties
  nginx.conf: |-
    user  nginx;
    worker_processes  1;

    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;

    events {
        worker_connections  1024;
    }

    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;
        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';
        access_log  /var/log/nginx/access.log  main;
        sendfile        on;
        #tcp_nopush     on;
        keepalive_timeout  65;

        #gzip  on;

        upstream django {
        server {{ .Release.Name }}-{{ .Values.studio.servicename }}:8080;
        }

        map $http_upgrade $connection_upgrade {
            default upgrade;
            '' close;
        }

        server {
                listen 80 default_server;
                listen [::]:80 default_server;

                server_name _;
                client_max_body_size 0;
                location / {
                    proxy_pass http://django;
                    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                    proxy_set_header Host $http_host;
                    proxy_set_header X-Real-IP $remote_addr;


                }
        }
    }

apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-post-install
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: {{ .Release.Name }}-post-install
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    spec:
      restartPolicy: Never
      containers:
      - name: post-install-job
        image: {{ .Values.studio.image.repository }}
        command: ["/bin/sh"]
        args: ["-c", "python3 manage.py createsuperuser --email {{ include "stackn.studio.superuser.email" . }} --username {{ include "stackn.studio.superuser" . }} --noinput && python3 manage.py loaddata fixtures.json"]
        env:
        {{ if .Values.studio.debug }}
        - name: DEBUG
          value: "true"
        {{ end }}
        - name: GET_HOSTS_FROM
          value: dns
        - name: DJANGO_SUPERUSER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "stackn.secretName" . }}
              key: studio-superuser-password
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "stackn.studio.postgresql.secretName" . }}
              key: postgresql-password
        image: {{ .Values.studio.image.repository }}
        imagePullPolicy: Always
        volumeMounts:
          - name: config
            mountPath: "/app/chartcontroller/config/"
            readOnly: true
          - mountPath: /app/studio/settings.py
            subPath: settings.py
            name: {{ .Release.Name}}-settings-configmap
          - mountPath: /app/projects/fixtures/fixtures.json
            subPath: fixtures.json
            name: {{ .Release.Name }}-fixtures-configmap
          - name: mediavol
            mountPath: /media
        resources:
          limits:
            cpu: {{ .Values.studio.resources.limits.cpu }}
            memory: {{ .Values.studio.resources.limits.memory }}
          requests:
            cpu: {{ .Values.studio.resources.requests.cpu }}
            memory: {{ .Values.studio.resources.requests.memory }}

    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      restartPolicy: OnFailure
      volumes:
      - name: config
        secret:
          secretName: {{ .Release.Name }}-chart-controller-secret
      - name: {{ .Release.Name}}-settings-configmap
        configMap:
          name: {{ .Release.Name}}-settings-configmap
          items:
          - key: settings.py
            path: settings.py
      - name: {{ .Release.Name }}-fixtures-configmap
        configMap:
          name: {{ .Release.Name }}-fixtures-configmap
          items:
          - key: fixtures.json
            path: fixtures.json
      - name: mediavol
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-studio-media


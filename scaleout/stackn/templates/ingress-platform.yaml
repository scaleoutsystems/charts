{{- if .Values.ingress.enabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Release.Name }}-ingress
  annotations:
    nginx.ingress.kubernetes.io/configuration-snippet: |
      if ($request_uri ~ ^/api/internal) { return 403; } 
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-set-headers: X-Forwarded-Proto:$scheme
  labels:
    io.kompose.service: {{ .Release.Name }}-ingress
spec:
  ingressClassName: nginx
  {{- if .Values.ingress.tls }}
  tls:
  {{- range .Values.ingress.tls }}
    - hosts:
      {{- range .hosts }}
        - {{ . | quote }}
      {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
  {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
        - path: /
          backend:
            service:
              name: {{ $.Release.Name }}-studio
              port:
                number: 8080
          pathType: ImplementationSpecific
        - path: /static/
          backend:
            service:
              name: {{ $.Release.Name }}-static
              port:
                number: 8081
          pathType: ImplementationSpecific
        - path: /media/
          backend:
            service:
              name: {{ $.Release.Name }}-static
              port:
                number: 8081
          pathType: ImplementationSpecific
  {{- end }}
{{- end }}


